{"ast":null,"code":"import _classCallCheck from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport var u8 = function u8(arr) {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n};\nexport var u32 = function u32(arr) {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n};\n// Cast array to view\nexport var createView = function createView(arr) {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n};\n// The rotate right (circular right shift) operation for uint32\nexport var rotr = function rotr(word, shift) {\n  return word << 32 - shift | word >>> shift;\n};\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport var isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\nvar hexes = Array.from({\n  length: 256\n}, function (v, i) {\n  return i.toString(16).padStart(2, '0');\n});\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a) {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  var hex = '';\n  for (var i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  var array = new Uint8Array(hex.length / 2);\n  for (var i = 0; i < array.length; i++) {\n    var j = i * 2;\n    var hexByte = hex.slice(j, j + 2);\n    var byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport var nextTick = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function nextTick() {\n    return _ref.apply(this, arguments);\n  };\n}();\n// Returns control to thread each 'tick' ms to avoid blocking\nexport function asyncLoop(_x, _x2, _x3) {\n  return _asyncLoop.apply(this, arguments);\n}\nfunction _asyncLoop() {\n  _asyncLoop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(iters, tick, cb) {\n    var ts, i, diff;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          ts = Date.now();\n          i = 0;\n        case 2:\n          if (!(i < iters)) {\n            _context2.next = 13;\n            break;\n          }\n          cb(i);\n          // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n          diff = Date.now() - ts;\n          if (!(diff >= 0 && diff < tick)) {\n            _context2.next = 7;\n            break;\n          }\n          return _context2.abrupt(\"continue\", 10);\n        case 7:\n          _context2.next = 9;\n          return nextTick();\n        case 9:\n          ts += diff;\n        case 10:\n          i++;\n          _context2.next = 2;\n          break;\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _asyncLoop.apply(this, arguments);\n}\nexport function utf8ToBytes(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError(\"utf8ToBytes expected string, got \".concat(typeof str));\n  }\n  return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array)) throw new TypeError(\"Expected input type is Uint8Array (got \".concat(typeof data, \")\"));\n  return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n  if (!arrays.every(function (a) {\n    return a instanceof Uint8Array;\n  })) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  var length = arrays.reduce(function (a, arr) {\n    return a + arr.length;\n  }, 0);\n  var result = new Uint8Array(length);\n  for (var i = 0, pad = 0; i < arrays.length; i++) {\n    var arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n// For runtime check if class implements interface\nexport var Hash = /*#__PURE__*/function () {\n  function Hash() {\n    _classCallCheck(this, Hash);\n  }\n  _createClass(Hash, [{\n    key: \"clone\",\n    value:\n    // Safe version that clones internal state\n    function clone() {\n      return this._cloneInto();\n    }\n  }]);\n  return Hash;\n}();\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nvar isPlainObject = function isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n};\nexport function checkOpts(defaults, opts) {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts))) throw new TypeError('Options should be object or undefined');\n  var merged = Object.assign(defaults, opts);\n  return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n  var hashC = function hashC(message) {\n    return hashConstructor().update(toBytes(message)).digest();\n  };\n  var tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = function () {\n    return hashConstructor();\n  };\n  return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n  var hashC = function hashC(msg, opts) {\n    return hashCons(opts).update(toBytes(msg)).digest();\n  };\n  var tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = function (opts) {\n    return hashCons(opts);\n  };\n  return hashC;\n}\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes() {\n  var bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}","map":{"version":3,"names":["crypto","u8","arr","Uint8Array","buffer","byteOffset","byteLength","u32","Uint32Array","Math","floor","createView","DataView","rotr","word","shift","isLE","Error","hexes","Array","from","length","v","i","toString","padStart","bytesToHex","uint8a","hex","hexToBytes","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","nextTick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","apply","arguments","asyncLoop","_x","_x2","_x3","_asyncLoop","_callee2","iters","tick","cb","ts","diff","_callee2$","_context2","Date","now","abrupt","utf8ToBytes","str","concat","TextEncoder","encode","toBytes","data","concatBytes","_len","arrays","_key","every","a","reduce","result","pad","set","Hash","_classCallCheck","_createClass","key","value","clone","_cloneInto","isPlainObject","obj","Object","prototype","call","constructor","checkOpts","defaults","opts","undefined","merged","assign","wrapConstructor","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","wrapConstructorWithOpts","hashCons","msg","randomBytes","bytesLength","getRandomValues"],"sources":["/Users/ewanm/projects/node_modules/@noble/hashes/src/utils.ts"],"sourcesContent":["/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}