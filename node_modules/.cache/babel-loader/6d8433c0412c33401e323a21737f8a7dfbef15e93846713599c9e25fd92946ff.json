{"ast":null,"code":"import _classCallCheck from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nvar _u64$split = u64.split(['0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc', '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118', '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2', '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694', '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65', '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5', '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4', '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70', '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df', '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b', '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30', '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8', '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8', '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3', '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec', '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b', '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178', '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b', '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c', '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'].map(function (n) {\n    return BigInt(n);\n  })),\n  _u64$split2 = _slicedToArray(_u64$split, 2),\n  SHA512_Kh = _u64$split2[0],\n  SHA512_Kl = _u64$split2[1];\n// Temporary buffer, not used to store anything between runs\nvar SHA512_W_H = new Uint32Array(80);\nvar SHA512_W_L = new Uint32Array(80);\nexport var SHA512 = /*#__PURE__*/function (_SHA) {\n  _inherits(SHA512, _SHA);\n  var _super = _createSuper(SHA512);\n  function SHA512() {\n    var _this;\n    _classCallCheck(this, SHA512);\n    _this = _super.call(this, 128, 64, 16, false);\n    // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n    // Also looks cleaner and easier to verify with spec.\n    // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n    // h -- high 32 bits, l -- low 32 bits\n    _this.Ah = 0x6a09e667 | 0;\n    _this.Al = 0xf3bcc908 | 0;\n    _this.Bh = 0xbb67ae85 | 0;\n    _this.Bl = 0x84caa73b | 0;\n    _this.Ch = 0x3c6ef372 | 0;\n    _this.Cl = 0xfe94f82b | 0;\n    _this.Dh = 0xa54ff53a | 0;\n    _this.Dl = 0x5f1d36f1 | 0;\n    _this.Eh = 0x510e527f | 0;\n    _this.El = 0xade682d1 | 0;\n    _this.Fh = 0x9b05688c | 0;\n    _this.Fl = 0x2b3e6c1f | 0;\n    _this.Gh = 0x1f83d9ab | 0;\n    _this.Gl = 0xfb41bd6b | 0;\n    _this.Hh = 0x5be0cd19 | 0;\n    _this.Hl = 0x137e2179 | 0;\n    return _this;\n  }\n  // prettier-ignore\n  _createClass(SHA512, [{\n    key: \"get\",\n    value: function get() {\n      var Ah = this.Ah,\n        Al = this.Al,\n        Bh = this.Bh,\n        Bl = this.Bl,\n        Ch = this.Ch,\n        Cl = this.Cl,\n        Dh = this.Dh,\n        Dl = this.Dl,\n        Eh = this.Eh,\n        El = this.El,\n        Fh = this.Fh,\n        Fl = this.Fl,\n        Gh = this.Gh,\n        Gl = this.Gl,\n        Hh = this.Hh,\n        Hl = this.Hl;\n      return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n  }, {\n    key: \"set\",\n    value: function set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n      this.Ah = Ah | 0;\n      this.Al = Al | 0;\n      this.Bh = Bh | 0;\n      this.Bl = Bl | 0;\n      this.Ch = Ch | 0;\n      this.Cl = Cl | 0;\n      this.Dh = Dh | 0;\n      this.Dl = Dl | 0;\n      this.Eh = Eh | 0;\n      this.El = El | 0;\n      this.Fh = Fh | 0;\n      this.Fl = Fl | 0;\n      this.Gh = Gh | 0;\n      this.Gl = Gl | 0;\n      this.Hh = Hh | 0;\n      this.Hl = Hl | 0;\n    }\n  }, {\n    key: \"process\",\n    value: function process(view, offset) {\n      // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n      for (var i = 0; i < 16; i++, offset += 4) {\n        SHA512_W_H[i] = view.getUint32(offset);\n        SHA512_W_L[i] = view.getUint32(offset += 4);\n      }\n      for (var _i = 16; _i < 80; _i++) {\n        // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n        var W15h = SHA512_W_H[_i - 15] | 0;\n        var W15l = SHA512_W_L[_i - 15] | 0;\n        var s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n        var s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n        // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n        var W2h = SHA512_W_H[_i - 2] | 0;\n        var W2l = SHA512_W_L[_i - 2] | 0;\n        var s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n        var s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n        // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n        var SUMl = u64.add4L(s0l, s1l, SHA512_W_L[_i - 7], SHA512_W_L[_i - 16]);\n        var SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[_i - 7], SHA512_W_H[_i - 16]);\n        SHA512_W_H[_i] = SUMh | 0;\n        SHA512_W_L[_i] = SUMl | 0;\n      }\n      var Ah = this.Ah,\n        Al = this.Al,\n        Bh = this.Bh,\n        Bl = this.Bl,\n        Ch = this.Ch,\n        Cl = this.Cl,\n        Dh = this.Dh,\n        Dl = this.Dl,\n        Eh = this.Eh,\n        El = this.El,\n        Fh = this.Fh,\n        Fl = this.Fl,\n        Gh = this.Gh,\n        Gl = this.Gl,\n        Hh = this.Hh,\n        Hl = this.Hl;\n      // Compression function main loop, 80 rounds\n      for (var _i2 = 0; _i2 < 80; _i2++) {\n        // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n        var sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n        var sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n        //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n        var CHIh = Eh & Fh ^ ~Eh & Gh;\n        var CHIl = El & Fl ^ ~El & Gl;\n        // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n        // prettier-ignore\n        var T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[_i2], SHA512_W_L[_i2]);\n        var T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[_i2], SHA512_W_H[_i2]);\n        var T1l = T1ll | 0;\n        // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n        var sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n        var sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n        var MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;\n        var MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;\n        Hh = Gh | 0;\n        Hl = Gl | 0;\n        Gh = Fh | 0;\n        Gl = Fl | 0;\n        Fh = Eh | 0;\n        Fl = El | 0;\n        var _u64$add = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0);\n        Eh = _u64$add.h;\n        El = _u64$add.l;\n        Dh = Ch | 0;\n        Dl = Cl | 0;\n        Ch = Bh | 0;\n        Cl = Bl | 0;\n        Bh = Ah | 0;\n        Bl = Al | 0;\n        var All = u64.add3L(T1l, sigma0l, MAJl);\n        Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n        Al = All | 0;\n      }\n      // Add the compressed chunk to the current hash value\n      var _u64$add2 = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0);\n      Ah = _u64$add2.h;\n      Al = _u64$add2.l;\n      var _u64$add3 = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0);\n      Bh = _u64$add3.h;\n      Bl = _u64$add3.l;\n      var _u64$add4 = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0);\n      Ch = _u64$add4.h;\n      Cl = _u64$add4.l;\n      var _u64$add5 = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0);\n      Dh = _u64$add5.h;\n      Dl = _u64$add5.l;\n      var _u64$add6 = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0);\n      Eh = _u64$add6.h;\n      El = _u64$add6.l;\n      var _u64$add7 = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0);\n      Fh = _u64$add7.h;\n      Fl = _u64$add7.l;\n      var _u64$add8 = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0);\n      Gh = _u64$add8.h;\n      Gl = _u64$add8.l;\n      var _u64$add9 = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0);\n      Hh = _u64$add9.h;\n      Hl = _u64$add9.l;\n      this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n  }, {\n    key: \"roundClean\",\n    value: function roundClean() {\n      SHA512_W_H.fill(0);\n      SHA512_W_L.fill(0);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.buffer.fill(0);\n      this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n  }]);\n  return SHA512;\n}(SHA2);\nvar SHA512_224 = /*#__PURE__*/function (_SHA2) {\n  _inherits(SHA512_224, _SHA2);\n  var _super2 = _createSuper(SHA512_224);\n  function SHA512_224() {\n    var _this2;\n    _classCallCheck(this, SHA512_224);\n    _this2 = _super2.call(this);\n    // h -- high 32 bits, l -- low 32 bits\n    _this2.Ah = 0x8c3d37c8 | 0;\n    _this2.Al = 0x19544da2 | 0;\n    _this2.Bh = 0x73e19966 | 0;\n    _this2.Bl = 0x89dcd4d6 | 0;\n    _this2.Ch = 0x1dfab7ae | 0;\n    _this2.Cl = 0x32ff9c82 | 0;\n    _this2.Dh = 0x679dd514 | 0;\n    _this2.Dl = 0x582f9fcf | 0;\n    _this2.Eh = 0x0f6d2b69 | 0;\n    _this2.El = 0x7bd44da8 | 0;\n    _this2.Fh = 0x77e36f73 | 0;\n    _this2.Fl = 0x04c48942 | 0;\n    _this2.Gh = 0x3f9d85a8 | 0;\n    _this2.Gl = 0x6a1d36c8 | 0;\n    _this2.Hh = 0x1112e6ad | 0;\n    _this2.Hl = 0x91d692a1 | 0;\n    _this2.outputLen = 28;\n    return _this2;\n  }\n  return _createClass(SHA512_224);\n}(SHA512);\nvar SHA512_256 = /*#__PURE__*/function (_SHA3) {\n  _inherits(SHA512_256, _SHA3);\n  var _super3 = _createSuper(SHA512_256);\n  function SHA512_256() {\n    var _this3;\n    _classCallCheck(this, SHA512_256);\n    _this3 = _super3.call(this);\n    // h -- high 32 bits, l -- low 32 bits\n    _this3.Ah = 0x22312194 | 0;\n    _this3.Al = 0xfc2bf72c | 0;\n    _this3.Bh = 0x9f555fa3 | 0;\n    _this3.Bl = 0xc84c64c2 | 0;\n    _this3.Ch = 0x2393b86b | 0;\n    _this3.Cl = 0x6f53b151 | 0;\n    _this3.Dh = 0x96387719 | 0;\n    _this3.Dl = 0x5940eabd | 0;\n    _this3.Eh = 0x96283ee2 | 0;\n    _this3.El = 0xa88effe3 | 0;\n    _this3.Fh = 0xbe5e1e25 | 0;\n    _this3.Fl = 0x53863992 | 0;\n    _this3.Gh = 0x2b0199fc | 0;\n    _this3.Gl = 0x2c85b8aa | 0;\n    _this3.Hh = 0x0eb72ddc | 0;\n    _this3.Hl = 0x81c52ca2 | 0;\n    _this3.outputLen = 32;\n    return _this3;\n  }\n  return _createClass(SHA512_256);\n}(SHA512);\nvar SHA384 = /*#__PURE__*/function (_SHA4) {\n  _inherits(SHA384, _SHA4);\n  var _super4 = _createSuper(SHA384);\n  function SHA384() {\n    var _this4;\n    _classCallCheck(this, SHA384);\n    _this4 = _super4.call(this);\n    // h -- high 32 bits, l -- low 32 bits\n    _this4.Ah = 0xcbbb9d5d | 0;\n    _this4.Al = 0xc1059ed8 | 0;\n    _this4.Bh = 0x629a292a | 0;\n    _this4.Bl = 0x367cd507 | 0;\n    _this4.Ch = 0x9159015a | 0;\n    _this4.Cl = 0x3070dd17 | 0;\n    _this4.Dh = 0x152fecd8 | 0;\n    _this4.Dl = 0xf70e5939 | 0;\n    _this4.Eh = 0x67332667 | 0;\n    _this4.El = 0xffc00b31 | 0;\n    _this4.Fh = 0x8eb44a87 | 0;\n    _this4.Fl = 0x68581511 | 0;\n    _this4.Gh = 0xdb0c2e0d | 0;\n    _this4.Gl = 0x64f98fa7 | 0;\n    _this4.Hh = 0x47b5481d | 0;\n    _this4.Hl = 0xbefa4fa4 | 0;\n    _this4.outputLen = 48;\n    return _this4;\n  }\n  return _createClass(SHA384);\n}(SHA512);\nexport var sha512 = wrapConstructor(function () {\n  return new SHA512();\n});\nexport var sha512_224 = wrapConstructor(function () {\n  return new SHA512_224();\n});\nexport var sha512_256 = wrapConstructor(function () {\n  return new SHA512_256();\n});\nexport var sha384 = wrapConstructor(function () {\n  return new SHA384();\n});","map":{"version":3,"names":["SHA2","u64","wrapConstructor","_u64$split","split","map","n","BigInt","_u64$split2","_slicedToArray","SHA512_Kh","SHA512_Kl","SHA512_W_H","Uint32Array","SHA512_W_L","SHA512","_SHA","_inherits","_super","_createSuper","_this","_classCallCheck","call","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","_createClass","key","value","get","set","process","view","offset","i","getUint32","W15h","W15l","s0h","rotrSH","shrSH","s0l","rotrSL","shrSL","W2h","W2l","s1h","rotrBH","s1l","rotrBL","SUMl","add4L","SUMh","add4H","sigma1h","sigma1l","CHIh","CHIl","T1ll","add5L","T1h","add5H","T1l","sigma0h","sigma0l","MAJh","MAJl","_u64$add","add","h","l","All","add3L","add3H","_u64$add2","_u64$add3","_u64$add4","_u64$add5","_u64$add6","_u64$add7","_u64$add8","_u64$add9","roundClean","fill","destroy","buffer","SHA512_224","_SHA2","_super2","_this2","outputLen","SHA512_256","_SHA3","_super3","_this3","SHA384","_SHA4","_super4","_this4","sha512","sha512_224","sha512_256","sha384"],"sources":["/Users/ewanm/projects/node_modules/@noble/hashes/src/sha512.ts"],"sourcesContent":["import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}