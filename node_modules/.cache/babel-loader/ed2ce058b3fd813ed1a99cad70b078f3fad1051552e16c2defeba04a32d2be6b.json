{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{PublicKey}from'@solana/web3.js';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PdaGenerator(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),programIdSeed=_useState2[0],setProgramIdSeed=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),accountSeeds=_useState4[0],setAccountSeeds=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),pda=_useState6[0],setPda=_useState6[1];var addAccountSeedField=function addAccountSeedField(){setAccountSeeds([].concat(_toConsumableArray(accountSeeds),['']));};var updateAccountSeed=function updateAccountSeed(index,value){var newAccountSeeds=_toConsumableArray(accountSeeds);newAccountSeeds[index]=value;setAccountSeeds(newAccountSeeds);};var removeAccountSeedField=function removeAccountSeedField(index){var newAccountSeeds=_toConsumableArray(accountSeeds);newAccountSeeds.splice(index,1);setAccountSeeds(newAccountSeeds);};var generatePda=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var programId,accountSeedBuffers,_yield$PublicKey$find,_yield$PublicKey$find2,pdaPublicKey,_;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;programId=new PublicKey(programIdSeed);accountSeedBuffers=accountSeeds.map(function(seed){return new TextEncoder().encode(seed);});_context.next=5;return PublicKey.findProgramAddress(accountSeedBuffers,programId);case 5:_yield$PublicKey$find=_context.sent;_yield$PublicKey$find2=_slicedToArray(_yield$PublicKey$find,2);pdaPublicKey=_yield$PublicKey$find2[0];_=_yield$PublicKey$find2[1];setPda(pdaPublicKey.toBase58());_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 15:case\"end\":return _context.stop();}},_callee,null,[[0,12]]);}));return function generatePda(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"programIdSeed\",children:\"Program ID seed:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"programIdSeed\",value:programIdSeed,onChange:function onChange(e){return setProgramIdSeed(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"accountSeeds\",children:\"Account seeds:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addAccountSeedField,children:\"Add seed\"}),accountSeeds.map(function(seed,index){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:seed,onChange:function onChange(e){return updateAccountSeed(index,e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return removeAccountSeedField(index);},children:\"Remove\"})]},index);})]}),/*#__PURE__*/_jsx(\"button\",{onClick:generatePda,children:\"Generate PDA\"}),pda&&/*#__PURE__*/_jsxs(\"div\",{children:[\"PDA: \",pda]})]});}export default PdaGenerator;","map":{"version":3,"names":["PublicKey","useState","jsx","_jsx","jsxs","_jsxs","PdaGenerator","_useState","_useState2","_slicedToArray","programIdSeed","setProgramIdSeed","_useState3","_useState4","accountSeeds","setAccountSeeds","_useState5","_useState6","pda","setPda","addAccountSeedField","concat","_toConsumableArray","updateAccountSeed","index","value","newAccountSeeds","removeAccountSeedField","splice","generatePda","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","programId","accountSeedBuffers","_yield$PublicKey$find","_yield$PublicKey$find2","pdaPublicKey","_","wrap","_callee$","_context","prev","next","map","seed","TextEncoder","encode","findProgramAddress","sent","toBase58","t0","console","error","stop","apply","arguments","children","htmlFor","type","id","onChange","e","target","onClick"],"sources":["/Users/ewanm/projects/solana-pda-generator/solana-pda-generator/src/PdaGenerator.js"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { useState } from 'react';\n\nfunction PdaGenerator() {\n  const [programIdSeed, setProgramIdSeed] = useState('');\n  const [accountSeeds, setAccountSeeds] = useState([]);\n  const [pda, setPda] = useState(null);\n\n  const addAccountSeedField = () => {\n    setAccountSeeds([...accountSeeds, '']);\n  };\n\n  const updateAccountSeed = (index, value) => {\n    const newAccountSeeds = [...accountSeeds];\n    newAccountSeeds[index] = value;\n    setAccountSeeds(newAccountSeeds);\n  };\n\n  const removeAccountSeedField = (index) => {\n    const newAccountSeeds = [...accountSeeds];\n    newAccountSeeds.splice(index, 1);\n    setAccountSeeds(newAccountSeeds);\n  };\n\n  const generatePda = async () => {\n    try {\n      const programId = new PublicKey(programIdSeed);\n      const accountSeedBuffers = accountSeeds.map((seed) => new TextEncoder().encode(seed));\n      const [pdaPublicKey, _] = await PublicKey.findProgramAddress(accountSeedBuffers, programId);\n      setPda(pdaPublicKey.toBase58());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"programIdSeed\">Program ID seed:</label>\n        <input type=\"text\" id=\"programIdSeed\" value={programIdSeed} onChange={(e) => setProgramIdSeed(e.target.value)} />\n      </div>\n      <div>\n        <label htmlFor=\"accountSeeds\">Account seeds:</label>\n        <button onClick={addAccountSeedField}>Add seed</button>\n        {accountSeeds.map((seed, index) => (\n          <div key={index}>\n            <input type=\"text\" value={seed} onChange={(e) => updateAccountSeed(index, e.target.value)} />\n            <button onClick={() => removeAccountSeedField(index)}>Remove</button>\n          </div>\n        ))}\n      </div>\n      <button onClick={generatePda}>Generate PDA</button>\n      {pda && <div>PDA: {pda}</div>}\n    </div>\n  );\n}\n\nexport default PdaGenerator;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}